version: '3.9'

services:

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - my_spring-cloud-network
    restart: always


  activeMq:
    image: apache/activemq-artemis:latest
    container_name: activemq
    ports:
      - "8161:8161"
      - "61616:61616"
    environment:
      ACTIVEMQ_USER: artemis
      ACTIVEMQ_PASSWORD: artemis
      ACTIVEMQ_ADMIN_LOGIN: artemis
      ACTIVEMQ_ADMIN_PASSWORD: artemis

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"

  #zookeeper:
  # image: confluentinc/cp-zookeeper:latest
    #    container_name: zookeeper
      #environment:
      #ZOOKEEPER_CLIENT_PORT: 2181
      #ZOOKEEPER_TICK_TIME: 2000
      #ports:
      #- 2181:2181
      #- 2888:2888
      #- 3888:3888
      #networks:
      #- my_spring-cloud-network

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
    volumes:
      - kafka-data:/bitnami/kafka
    networks:
      - my_spring-cloud-network

  #kafdrop for Kafka UI
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    restart: no
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKER_CONNECT: kafka:9092
    depends_on:
      - kafka
    networks:
      - my_spring-cloud-network

  #akhq.io is a web-based user interface for managing Kafka clusters
  akhq:
    container_name: akhq
    image: tchiotludo/akhq:latest
    restart: unless-stopped
    ports:
      - 9001:9001
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"

    links:
      - kafka
    networks:
      - my_spring-cloud-network

networks:
  my_spring-cloud-network:

volumes:
  kafka-data:
    driver: local
  mysql_data:
    driver: local
